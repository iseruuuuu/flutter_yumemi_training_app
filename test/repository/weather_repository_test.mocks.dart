// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_training/test/repository/weather_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:flutter_training/data_source/weather_data_source.dart' as _i3;
import 'package:flutter_training/model/weather_request.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:yumemi_weather/yumemi_weather.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeYumemiWeather_0 extends _i1.SmartFake implements _i2.YumemiWeather {
  _FakeYumemiWeather_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherDataSource extends _i1.Mock implements _i3.WeatherDataSource {
  MockWeatherDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.YumemiWeather get yumemiWeather => (super.noSuchMethod(
        Invocation.getter(#yumemiWeather),
        returnValue: _FakeYumemiWeather_0(
          this,
          Invocation.getter(#yumemiWeather),
        ),
      ) as _i2.YumemiWeather);

  @override
  Map<String, dynamic> fetchWeather(_i4.WeatherRequest? weatherRequest) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchWeather,
          [weatherRequest],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}
